{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanisha Choudhary\\\\Placements\\\\Project- Still Burning\\\\Dev\\\\Doing_Arc\\\\graphql-react-game-booking\\\\frontend\\\\src\\\\pages\\\\Bookings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport BookingList from '../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingsPage = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [bookings, setBookings] = useState([]);\n  const [outputType, setOutputType] = useState('list');\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n  const fetchBookings = () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n          query {\n            bookings {\n              _id\n              createdAt\n              game {\n                _id\n                title\n                date\n                price\n              }\n            }\n          }\n        `\n    };\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + authContext.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(resData => {\n      const bookingsData = resData.data.bookings;\n      setBookings(bookingsData);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n  const deleteBookingHandler = bookingId => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n          mutation CancelBooking($id: ID!) {\n            cancelBooking(bookingId: $id) {\n              _id\n              title\n            }\n          }\n        `,\n      variables: {\n        id: bookingId\n      }\n    };\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + authContext.token\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(resData => {\n      const updatedBookings = bookings.filter(booking => booking._id !== bookingId);\n      setBookings(updatedBookings);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsLoading(false);\n    });\n  };\n  const changeOutputTypeHandler = outputType => {\n    setOutputType(outputType);\n  };\n  let content = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 17\n  }, this);\n  if (!isLoading) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BookingsControls, {\n        activeOutputType: outputType,\n        onChange: changeOutputTypeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: outputType === 'list' ? /*#__PURE__*/_jsxDEV(BookingList, {\n          bookings: bookings,\n          onDelete: deleteBookingHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BookingsChart, {\n          bookings: bookings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: content\n  }, void 0, false);\n};\n_s(BookingsPage, \"Up7NXAj/F/RLSQ1Lj5P2O8b9pog=\");\n_c = BookingsPage;\nexport default BookingsPage;\nvar _c;\n$RefreshReg$(_c, \"BookingsPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Spinner","AuthContext","BookingList","BookingsChart","BookingsControls","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingsPage","_s","isLoading","setIsLoading","bookings","setBookings","outputType","setOutputType","authContext","fetchBookings","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","token","then","res","status","Error","json","resData","bookingsData","data","catch","err","console","log","deleteBookingHandler","bookingId","variables","id","updatedBookings","filter","booking","_id","changeOutputTypeHandler","content","fileName","_jsxFileName","lineNumber","columnNumber","children","activeOutputType","onChange","onDelete","_c","$RefreshReg$"],"sources":["D:/Tanisha Choudhary/Placements/Project- Still Burning/Dev/Doing_Arc/graphql-react-game-booking/frontend/src/pages/Bookings.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\nimport BookingList from '../components/Bookings/BookingList/BookingList';\r\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\r\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\r\n\r\nconst BookingsPage = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bookings, setBookings] = useState([]);\r\n  const [outputType, setOutputType] = useState('list');\r\n  const authContext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const fetchBookings = () => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n              createdAt\r\n              game {\r\n                _id\r\n                title\r\n                date\r\n                price\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + authContext.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const bookingsData = resData.data.bookings;\r\n        setBookings(bookingsData);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const deleteBookingHandler = bookingId => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n          mutation CancelBooking($id: ID!) {\r\n            cancelBooking(bookingId: $id) {\r\n              _id\r\n              title\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: bookingId\r\n      }\r\n    };\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + authContext.token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed!');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const updatedBookings = bookings.filter(booking => booking._id !== bookingId);\r\n        setBookings(updatedBookings);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeOutputTypeHandler = outputType => {\r\n    setOutputType(outputType);\r\n  };\r\n\r\n  let content = <Spinner />;\r\n  if (!isLoading) {\r\n    content = (\r\n      <>\r\n        <BookingsControls\r\n          activeOutputType={outputType}\r\n          onChange={changeOutputTypeHandler}\r\n        />\r\n        <div>\r\n          {outputType === 'list' ? (\r\n            <BookingList\r\n              bookings={bookings}\r\n              onDelete={deleteBookingHandler}\r\n            />\r\n          ) : (\r\n            <BookingsChart bookings={bookings} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{content}</>;\r\n};\r\n\r\nexport default BookingsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}