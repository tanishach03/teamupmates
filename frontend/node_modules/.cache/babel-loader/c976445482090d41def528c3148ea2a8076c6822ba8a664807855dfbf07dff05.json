{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanisha Choudhary\\\\Placements\\\\Project- Still Burning\\\\Dev\\\\Doing_Arc\\\\graphql-react-game-booking\\\\frontend\\\\src\\\\pages\\\\Bookings.jsx\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport BookingList from '../components/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BookingsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      bookings: []\n    };\n    this.fetchBookings = () => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: `\n          query {\n            bookings {\n              _id\n              createdAt\n              Game {\n                _id\n                title\n                date\n              }\n            }\n          }\n        `\n      };\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      }).then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({\n          bookings: bookings,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchBookings();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [booking.game.title, \" - \", new Date(booking.createdAt).toLocaleDateString()]\n        }, booking._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}\nBookingsPage.contextType = AuthContext;\nexport default BookingsPage;","map":{"version":3,"names":["React","Component","Spinner","AuthContext","BookingList","jsxDEV","_jsxDEV","BookingsPage","constructor","args","state","isLoading","bookings","fetchBookings","setState","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","context","token","then","res","status","Error","json","resData","data","catch","err","console","log","componentDidMount","render","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","booking","game","title","Date","createdAt","toLocaleDateString","_id","contextType"],"sources":["D:/Tanisha Choudhary/Placements/Project- Still Burning/Dev/Doing_Arc/graphql-react-game-booking/frontend/src/pages/Bookings.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport BookingList from '../components/';\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: [],\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n              createdAt\r\n              Game {\r\n                _id\r\n                title\r\n                date\r\n              }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <ul>\r\n            {this.state.bookings.map((booking) => (\r\n              <li key={booking._id}>\r\n                {booking.game.title} - {/* UPDATED to game */}\r\n                {new Date(booking.createdAt).toLocaleDateString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACnCC,KAAK,GAAG;MACNC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAQDC,aAAa,GAAG,MAAM;MACpB,IAAI,CAACC,QAAQ,CAAC;QAAEH,SAAS,EAAE;MAAK,CAAC,CAAC;MAClC,MAAMI,WAAW,GAAG;QAClBC,KAAK,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,CAAC;MAEDC,KAAK,CAAC,+BAA+B,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;QACjCO,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,SAAS,GAAG,IAAI,CAACC,OAAO,CAACC;QAC1C;MACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,IAAID,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UAC5C,MAAM,IAAIC,KAAK,CAAC,SAAS,CAAC;QAC5B;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,OAAO,IAAK;QACjB,MAAMnB,QAAQ,GAAGmB,OAAO,CAACC,IAAI,CAACpB,QAAQ;QACtC,IAAI,CAACE,QAAQ,CAAC;UAAEF,QAAQ,EAAEA,QAAQ;UAAED,SAAS,EAAE;QAAM,CAAC,CAAC;MACzD,CAAC,CAAC,CACDsB,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACpB,QAAQ,CAAC;UAAEH,SAAS,EAAE;QAAM,CAAC,CAAC;MACrC,CAAC,CAAC;IACN,CAAC;EAAA;EA5CD0B,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACxB,aAAa,CAAC,CAAC;EACtB;EA4CAyB,MAAMA,CAAA,EAAG;IACP,oBACEhC,OAAA,CAACN,KAAK,CAACuC,QAAQ;MAAAC,QAAA,EACZ,IAAI,CAAC9B,KAAK,CAACC,SAAS,gBACnBL,OAAA,CAACJ,OAAO;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEXtC,OAAA;QAAAkC,QAAA,EACG,IAAI,CAAC9B,KAAK,CAACE,QAAQ,CAACiC,GAAG,CAAEC,OAAO,iBAC/BxC,OAAA;UAAAkC,QAAA,GACGM,OAAO,CAACC,IAAI,CAACC,KAAK,EAAC,KAAG,EACtB,IAAIC,IAAI,CAACH,OAAO,CAACI,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA,GAF1CL,OAAO,CAACM,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAErB;AACF;AAxEMrC,YAAY,CAMT8C,WAAW,GAAGlD,WAAW;AAoElC,eAAeI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}