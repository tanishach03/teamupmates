{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanisha Choudhary\\\\Placements\\\\Project- Still Burning\\\\Dev\\\\Doing_Arc\\\\graphql-react-game-booking\\\\frontend\\\\src\\\\pages\\\\Games.jsx\";\nimport React, { Component } from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport GameList from \"../components/Games/GameList/GameList\"; // Changed EventList to GameList\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport \"./Games.css\"; // Changed Events.css to Games.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GamesPage extends Component {\n  constructor(props) {\n    super(props);\n    // Changed EventsPage to GamesPage\n    this.state = {\n      creating: false,\n      games: [],\n      // Changed events to games\n      isLoading: false,\n      selectedGame: null // Changed selectedEvent to selectedGame\n    };\n    this.isActive = true;\n    this.startCreateGameHandler = () => {\n      // Changed startCreateEventHandler to startCreateGameHandler\n      this.setState({\n        creating: true\n      });\n    };\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const title = this.titleElRef.current.value;\n      const price = +this.priceElRef.current.value;\n      const date = this.dateElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\n        return;\n      }\n      const game = {\n        title,\n        price,\n        date,\n        description\n      }; // Changed event to game\n      console.log(game);\n      const requestBody = {\n        query: `\n          mutation {\n            createGame(gameInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `\n      };\n      const token = this.context.token;\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      }).then(resData => {\n        this.setState(prevState => {\n          const updatedGames = [...prevState.games]; // Changed updatedEvents to updatedGames\n          updatedGames.push({\n            _id: resData.data.createGame._id,\n            // Changed createEvent to createGame\n            title: resData.data.createGame.title,\n            description: resData.data.createGame.description,\n            date: resData.data.createGame.date,\n            price: resData.data.createGame.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return {\n            games: updatedGames\n          }; // Changed events to games\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false,\n        selectedGame: null\n      }); // Changed selectedEvent to selectedGame\n    };\n    this.showDetailHandler = gameId => {\n      // Changed eventId to gameId\n      this.setState(prevState => {\n        const selectedGame = prevState.games.find(g => g._id === gameId); // Changed events to games, and selectedEvent to selectedGame\n        return {\n          selectedGame: selectedGame\n        };\n      });\n    };\n    this.bookGameHandler = () => {\n      // Changed bookEventHandler to bookGameHandler\n      if (!this.context.token) {\n        this.setState({\n          selectedGame: null\n        }); // Changed selectedEvent to selectedGame\n        return;\n      }\n      const requestBody = {\n        query: `\n          mutation {\n            bookGame(gameId: \"${this.state.selectedGame._id}\") { // Changed bookEvent to bookGame and eventId to gameId\n              _id\n             createdAt\n             updatedAt\n            }\n          }\n        `\n      };\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        this.setState({\n          selectedGame: null\n        }); // Changed selectedEvent to selectedGame\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.titleElRef = /*#__PURE__*/React.createRef();\n    this.priceElRef = /*#__PURE__*/React.createRef();\n    this.dateElRef = /*#__PURE__*/React.createRef();\n    this.descriptionElRef = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.fetchGames(); // Changed fetchEvents to fetchGames\n  }\n  fetchGames() {\n    // Changed fetchEvents to fetchGames\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: `\n          query {\n            games { // Changed events to games\n              _id\n              title\n              description\n              date\n              price\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `\n    };\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed!\");\n      }\n      return res.json();\n    }).then(resData => {\n      const games = resData.data.games; // Changed events to games\n      if (this.isActive) {\n        this.setState({\n          games: games,\n          isLoading: false\n        }); // Changed events to games\n      }\n    }).catch(err => {\n      console.log(err);\n      if (this.isActive) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  }\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [(this.state.creating || this.state.selectedGame) && /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 62\n      }, this), \" \", this.state.creating && /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Add Game\" // Changed \"Add Event\" to \"Add Game\"\n        ,\n        canCancel: true,\n        canConfirm: true,\n        onCancel: this.modalCancelHandler,\n        onConfirm: this.modalConfirmHandler,\n        confirmText: \"Confirm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              ref: this.titleElRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"price\",\n              ref: this.priceElRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              id: \"date\",\n              ref: this.dateElRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              rows: \"4\",\n              ref: this.descriptionElRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), this.state.selectedGame &&\n      /*#__PURE__*/\n      // Changed selectedEvent to selectedGame\n      _jsxDEV(Modal, {\n        title: this.state.selectedGame.title // Changed selectedEvent to selectedGame\n        ,\n        canCancel: true,\n        canConfirm: true,\n        onCancel: this.modalCancelHandler,\n        onConfirm: this.bookGameHandler // Changed bookEventHandler to bookGameHandler\n        ,\n        confirmText: this.context.token ? \"Book\" : \"Confirm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.selectedGame.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"$\", this.state.selectedGame.price, \" -\", \" \", new Date(this.state.selectedGame.date).toLocaleDateString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.selectedGame.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), this.context.token && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"games-control\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Share your own Games!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.startCreateGameHandler,\n          children: [\" \", \"Create Game\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), this.state.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(GameList // Changed EventList to GameList\n      , {\n        games: this.state.games // Changed events to games\n        ,\n        authUserId: this.context.userId,\n        onViewDetail: this.showDetailHandler // Changed eventId to gameId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n}\nGamesPage.contextType = AuthContext;\nexport default GamesPage; // Changed EventsPage to GamesPage","map":{"version":3,"names":["React","Component","Modal","Backdrop","GameList","Spinner","AuthContext","jsxDEV","_jsxDEV","GamesPage","constructor","props","state","creating","games","isLoading","selectedGame","isActive","startCreateGameHandler","setState","modalConfirmHandler","title","titleElRef","current","value","price","priceElRef","date","dateElRef","description","descriptionElRef","trim","length","game","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","prevState","updatedGames","push","_id","data","createGame","creator","userId","catch","err","modalCancelHandler","showDetailHandler","gameId","find","g","bookGameHandler","createRef","componentDidMount","fetchGames","componentWillUnmount","render","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","canCancel","canConfirm","onCancel","onConfirm","confirmText","className","htmlFor","type","id","ref","rows","Date","toLocaleDateString","onClick","authUserId","onViewDetail","contextType"],"sources":["D:/Tanisha Choudhary/Placements/Project- Still Burning/Dev/Doing_Arc/graphql-react-game-booking/frontend/src/pages/Games.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport GameList from \"../components/Games/GameList/GameList\"; // Changed EventList to GameList\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport \"./Games.css\"; // Changed Events.css to Games.css\r\n\r\nclass GamesPage extends Component {\r\n  // Changed EventsPage to GamesPage\r\n  state = {\r\n    creating: false,\r\n    games: [], // Changed events to games\r\n    isLoading: false,\r\n    selectedGame: null, // Changed selectedEvent to selectedGame\r\n  };\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleElRef = React.createRef();\r\n    this.priceElRef = React.createRef();\r\n    this.dateElRef = React.createRef();\r\n    this.descriptionElRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchGames(); // Changed fetchEvents to fetchGames\r\n  }\r\n\r\n  startCreateGameHandler = () => {\r\n    // Changed startCreateEventHandler to startCreateGameHandler\r\n    this.setState({ creating: true });\r\n  };\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleElRef.current.value;\r\n    const price = +this.priceElRef.current.value;\r\n    const date = this.dateElRef.current.value;\r\n    const description = this.descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const game = { title, price, date, description }; // Changed event to game\r\n    console.log(game);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation {\r\n            createGame(gameInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedGames = [...prevState.games]; // Changed updatedEvents to updatedGames\r\n          updatedGames.push({\r\n            _id: resData.data.createGame._id, // Changed createEvent to createGame\r\n            title: resData.data.createGame.title,\r\n            description: resData.data.createGame.description,\r\n            date: resData.data.createGame.date,\r\n            price: resData.data.createGame.price,\r\n            creator: {\r\n              _id: this.context.userId,\r\n            },\r\n          });\r\n          return { games: updatedGames }; // Changed events to games\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedGame: null }); // Changed selectedEvent to selectedGame\r\n  };\r\n\r\n  fetchGames() {\r\n    // Changed fetchEvents to fetchGames\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            games { // Changed events to games\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const games = resData.data.games; // Changed events to games\r\n        if (this.isActive) {\r\n          this.setState({ games: games, isLoading: false }); // Changed events to games\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  showDetailHandler = (gameId) => {\r\n    // Changed eventId to gameId\r\n    this.setState((prevState) => {\r\n      const selectedGame = prevState.games.find((g) => g._id === gameId); // Changed events to games, and selectedEvent to selectedGame\r\n      return { selectedGame: selectedGame };\r\n    });\r\n  };\r\n\r\n  bookGameHandler = () => {\r\n    // Changed bookEventHandler to bookGameHandler\r\n    if (!this.context.token) {\r\n      this.setState({ selectedGame: null }); // Changed selectedEvent to selectedGame\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n          mutation {\r\n            bookGame(gameId: \"${this.state.selectedGame._id}\") { // Changed bookEvent to bookGame and eventId to gameId\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `,\r\n    };\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + this.context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        this.setState({ selectedGame: null }); // Changed selectedEvent to selectedGame\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedGame) && <Backdrop />}{\" \"}\r\n        {/* Changed selectedEvent to selectedGame */}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Game\" // Changed \"Add Event\" to \"Add Game\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedGame && ( // Changed selectedEvent to selectedGame\r\n          <Modal\r\n            title={this.state.selectedGame.title} // Changed selectedEvent to selectedGame\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookGameHandler} // Changed bookEventHandler to bookGameHandler\r\n            confirmText={this.context.token ? \"Book\" : \"Confirm\"}\r\n          >\r\n            <h1>{this.state.selectedGame.title}</h1>{\" \"}\r\n            {/* Changed selectedEvent to selectedGame */}\r\n            <h2>\r\n              ${this.state.selectedGame.price} -{\" \"}\r\n              {/* Changed selectedEvent to selectedGame */}\r\n              {new Date(this.state.selectedGame.date).toLocaleDateString()}{\" \"}\r\n              {/* Changed selectedEvent to selectedGame */}\r\n            </h2>\r\n            <p>{this.state.selectedGame.description}</p>{\" \"}\r\n            {/* Changed selectedEvent to selectedGame */}\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"games-control\">\r\n            {\" \"}\r\n            {/* Changed events-control to games-control */}\r\n            <p>Share your own Games!</p> {/* Changed \"Events\" to \"Games\" */}\r\n            <button className=\"btn\" onClick={this.startCreateGameHandler}>\r\n              {\" \"}\r\n              {/* Changed startCreateEventHandler to startCreateGameHandler */}\r\n              Create Game\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <GameList // Changed EventList to GameList\r\n            games={this.state.games} // Changed events to games\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler} // Changed eventId to gameId\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamesPage; // Changed EventsPage to GamesPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}